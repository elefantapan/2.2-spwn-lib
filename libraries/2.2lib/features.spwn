extract $

impl @group {
  scale: (self, x: @number, y: @number, duration: @number = 0, div_x: @bool = false, div_y: @bool = false, let center_gid: @number = 0, /*optional*/ onlmove: @bool = false, easing: @easing_type = NONE, ease_rate: @number = 2, relative_scale: @bool = false, relative_rot: @bool = false) {
    if(center_gid == 0) {
      center_gid = self
    }
    add(trigger {
        71: center_gid, // center group
        51: self, // target group
        1: 2067, // object id
        10: duration, // duration
        150: x, // scale X
        151: y, // scale Y
        133: onlmove, // only move
        30: easing.id, // easing
        85: ease_rate, // easing rate
        153: div_x, // divide by x
        154: div_y, // divide by y
        577: relative_scale, // relative scale
        452: relative_rot, // relative rotation
    })
  },
}

impl @item {
  persist: (self, timer_: @bool = false, target_all: @bool = false, reset: @bool = false, persist: @bool = true) {
    add(trigger {
        80: self, // item id
        494: timer_, // timer
        1: 3641, // object id
        491: persist, // persistent
        492: target_all, // target all
        493: reset, // reset
    })
  },
}

type @camera

impl @camera {
  zoom: (zoom_num: @number, duration: @number = 0, easing: @easing_type = NONE, ease_rate: @number = 2) {
    add(trigger {
      1: 1913, // object id
      371: zoom_num, // zoom
      10: duration, // duration
      30: easing.id, // easing
      85: ease_rate, // ease rate
    })
  },
}
